---
domain: EC2
  # Here we define classes, or types of objects
  # and dependencies that exists on the class level
  classes:
    - instance:
        states:
          - created
          - running
          - terminated
        actions:
          - launch
          - start
          - stop
          - terminate
    - volume:
        states:
          - created # just created, nothing else
          - attached_to # instance
        actions:
          create:
            parameters:
              volume: self
            dependencies: # not created
              - not 'created' in ${self}['statelist']
            statelist:
              # add state: created

          attach:
            parameters: # volume, instance
              volume: self
              instance: inst
            dependencies:
              - 'created' in ${self}['statelist']
              - 'created' in ${inst}['statelist']
              # volume is created
              # instance is created
              # external depencency requiring the volume attached to this instance
            statelist: # add attached_to instance
              add: 'attached_to ${inst}'

          detach:
            parameters:
              # volume
              # instance
            precondition:
              # all the objects dependent on the volume know that the volume is to be detached;
              #   i.e. all the reverse conditions are satisfied
            effect: # not attached_to any instance
              # remove_state: ${this}.states['attached_to']

    - filesystem:
        states:
          created:
          mounted:
        actions:
          create:

 # Here we define object and their dependencies
  objects:
    - instance:
      - inst1
    - volume:
        - vol1
