# Generated from grammar/Evans.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2;")
        buf.write("\u0198\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3")
        buf.write("\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3")
        buf.write("\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3")
        buf.write("\17\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30")
        buf.write("\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37")
        buf.write("\3 \3 \3 \7 \u00cd\n \f \16 \u00d0\13 \3 \3 \3 \3 \7 ")
        buf.write("\u00d6\n \f \16 \u00d9\13 \3 \5 \u00dc\n \3!\3!\3!\3\"")
        buf.write("\6\"\u00e2\n\"\r\"\16\"\u00e3\3#\6#\u00e7\n#\r#\16#\u00e8")
        buf.write("\3#\3#\6#\u00ed\n#\r#\16#\u00ee\3#\5#\u00f2\n#\3#\3#\6")
        buf.write("#\u00f6\n#\r#\16#\u00f7\3#\5#\u00fb\n#\3#\6#\u00fe\n#")
        buf.write("\r#\16#\u00ff\3#\3#\5#\u0104\n#\3$\3$\3$\3$\3$\3$\3$\3")
        buf.write("$\3$\5$\u010f\n$\3%\3%\5%\u0113\n%\3%\6%\u0116\n%\r%\16")
        buf.write("%\u0117\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3")
        buf.write("(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3")
        buf.write("+\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3")
        buf.write("\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62")
        buf.write("\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64")
        buf.write("\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\66")
        buf.write("\3\66\3\66\3\67\3\67\3\67\3\67\3\67\38\38\38\38\38\39")
        buf.write("\39\39\39\3:\3:\3:\3:\7:\u0180\n:\f:\16:\u0183\13:\3;")
        buf.write("\3;\3<\3<\3=\3=\7=\u018b\n=\f=\16=\u018e\13=\3=\3=\3>")
        buf.write("\6>\u0193\n>\r>\16>\u0194\3>\3>\2\2?\3\3\5\4\7\5\t\6\13")
        buf.write("\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37")
        buf.write("\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34")
        buf.write("\67\359\36;\37= ?!A\2C\"E#G$I\2K%M&O\'Q(S)U*W+Y,[-]._")
        buf.write("/a\60c\61e\62g\63i\64k\65m\66o\67q8s9u\2w\2y:{;\3\2\13")
        buf.write("\4\2$$^^\4\2))^^\n\2$$))^^ddhhppttvv\4\2GGgg\4\2--//\4")
        buf.write("\2C\\c|\3\2\62;\4\2\f\f\16\17\5\2\13\f\17\17\"\"\2\u01a9")
        buf.write("\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13")
        buf.write("\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3")
        buf.write("\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write("\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write("%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2")
        buf.write("\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2")
        buf.write("\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2")
        buf.write("\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3")
        buf.write("\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2y")
        buf.write("\3\2\2\2\2{\3\2\2\2\3}\3\2\2\2\5\177\3\2\2\2\7\u0081\3")
        buf.write("\2\2\2\t\u0083\3\2\2\2\13\u0085\3\2\2\2\r\u0087\3\2\2")
        buf.write("\2\17\u0089\3\2\2\2\21\u008b\3\2\2\2\23\u008d\3\2\2\2")
        buf.write("\25\u008f\3\2\2\2\27\u0092\3\2\2\2\31\u0095\3\2\2\2\33")
        buf.write("\u0098\3\2\2\2\35\u009b\3\2\2\2\37\u009e\3\2\2\2!\u00a1")
        buf.write("\3\2\2\2#\u00a4\3\2\2\2%\u00a8\3\2\2\2\'\u00aa\3\2\2\2")
        buf.write(")\u00ac\3\2\2\2+\u00ae\3\2\2\2-\u00b0\3\2\2\2/\u00b2\3")
        buf.write("\2\2\2\61\u00b4\3\2\2\2\63\u00b6\3\2\2\2\65\u00b9\3\2")
        buf.write("\2\2\67\u00bc\3\2\2\29\u00bf\3\2\2\2;\u00c2\3\2\2\2=\u00c6")
        buf.write("\3\2\2\2?\u00db\3\2\2\2A\u00dd\3\2\2\2C\u00e1\3\2\2\2")
        buf.write("E\u0103\3\2\2\2G\u010e\3\2\2\2I\u0110\3\2\2\2K\u0119\3")
        buf.write("\2\2\2M\u011f\3\2\2\2O\u0124\3\2\2\2Q\u012a\3\2\2\2S\u012f")
        buf.write("\3\2\2\2U\u0134\3\2\2\2W\u0139\3\2\2\2Y\u013c\3\2\2\2")
        buf.write("[\u0141\3\2\2\2]\u0146\3\2\2\2_\u014a\3\2\2\2a\u0150\3")
        buf.write("\2\2\2c\u0154\3\2\2\2e\u015a\3\2\2\2g\u015f\3\2\2\2i\u0164")
        buf.write("\3\2\2\2k\u0168\3\2\2\2m\u016d\3\2\2\2o\u0172\3\2\2\2")
        buf.write("q\u0177\3\2\2\2s\u017b\3\2\2\2u\u0184\3\2\2\2w\u0186\3")
        buf.write("\2\2\2y\u0188\3\2\2\2{\u0192\3\2\2\2}~\7}\2\2~\4\3\2\2")
        buf.write("\2\177\u0080\7\177\2\2\u0080\6\3\2\2\2\u0081\u0082\7<")
        buf.write("\2\2\u0082\b\3\2\2\2\u0083\u0084\7.\2\2\u0084\n\3\2\2")
        buf.write("\2\u0085\u0086\7=\2\2\u0086\f\3\2\2\2\u0087\u0088\7?\2")
        buf.write("\2\u0088\16\3\2\2\2\u0089\u008a\7*\2\2\u008a\20\3\2\2")
        buf.write("\2\u008b\u008c\7+\2\2\u008c\22\3\2\2\2\u008d\u008e\7\60")
        buf.write("\2\2\u008e\24\3\2\2\2\u008f\u0090\7-\2\2\u0090\u0091\7")
        buf.write("?\2\2\u0091\26\3\2\2\2\u0092\u0093\7/\2\2\u0093\u0094")
        buf.write("\7?\2\2\u0094\30\3\2\2\2\u0095\u0096\7,\2\2\u0096\u0097")
        buf.write("\7?\2\2\u0097\32\3\2\2\2\u0098\u0099\7\61\2\2\u0099\u009a")
        buf.write("\7?\2\2\u009a\34\3\2\2\2\u009b\u009c\7\'\2\2\u009c\u009d")
        buf.write("\7?\2\2\u009d\36\3\2\2\2\u009e\u009f\7-\2\2\u009f\u00a0")
        buf.write("\7-\2\2\u00a0 \3\2\2\2\u00a1\u00a2\7/\2\2\u00a2\u00a3")
        buf.write("\7/\2\2\u00a3\"\3\2\2\2\u00a4\u00a5\7p\2\2\u00a5\u00a6")
        buf.write("\7q\2\2\u00a6\u00a7\7v\2\2\u00a7$\3\2\2\2\u00a8\u00a9")
        buf.write("\7-\2\2\u00a9&\3\2\2\2\u00aa\u00ab\7/\2\2\u00ab(\3\2\2")
        buf.write("\2\u00ac\u00ad\7,\2\2\u00ad*\3\2\2\2\u00ae\u00af\7\61")
        buf.write("\2\2\u00af,\3\2\2\2\u00b0\u00b1\7\'\2\2\u00b1.\3\2\2\2")
        buf.write("\u00b2\u00b3\7>\2\2\u00b3\60\3\2\2\2\u00b4\u00b5\7@\2")
        buf.write("\2\u00b5\62\3\2\2\2\u00b6\u00b7\7>\2\2\u00b7\u00b8\7?")
        buf.write("\2\2\u00b8\64\3\2\2\2\u00b9\u00ba\7@\2\2\u00ba\u00bb\7")
        buf.write("?\2\2\u00bb\66\3\2\2\2\u00bc\u00bd\7#\2\2\u00bd\u00be")
        buf.write("\7?\2\2\u00be8\3\2\2\2\u00bf\u00c0\7?\2\2\u00c0\u00c1")
        buf.write("\7?\2\2\u00c1:\3\2\2\2\u00c2\u00c3\7c\2\2\u00c3\u00c4")
        buf.write("\7p\2\2\u00c4\u00c5\7f\2\2\u00c5<\3\2\2\2\u00c6\u00c7")
        buf.write("\7q\2\2\u00c7\u00c8\7t\2\2\u00c8>\3\2\2\2\u00c9\u00ce")
        buf.write("\7$\2\2\u00ca\u00cd\5A!\2\u00cb\u00cd\n\2\2\2\u00cc\u00ca")
        buf.write("\3\2\2\2\u00cc\u00cb\3\2\2\2\u00cd\u00d0\3\2\2\2\u00ce")
        buf.write("\u00cc\3\2\2\2\u00ce\u00cf\3\2\2\2\u00cf\u00d1\3\2\2\2")
        buf.write("\u00d0\u00ce\3\2\2\2\u00d1\u00dc\7$\2\2\u00d2\u00d7\7")
        buf.write(")\2\2\u00d3\u00d6\5A!\2\u00d4\u00d6\n\3\2\2\u00d5\u00d3")
        buf.write("\3\2\2\2\u00d5\u00d4\3\2\2\2\u00d6\u00d9\3\2\2\2\u00d7")
        buf.write("\u00d5\3\2\2\2\u00d7\u00d8\3\2\2\2\u00d8\u00da\3\2\2\2")
        buf.write("\u00d9\u00d7\3\2\2\2\u00da\u00dc\7)\2\2\u00db\u00c9\3")
        buf.write("\2\2\2\u00db\u00d2\3\2\2\2\u00dc@\3\2\2\2\u00dd\u00de")
        buf.write("\7^\2\2\u00de\u00df\t\4\2\2\u00dfB\3\2\2\2\u00e0\u00e2")
        buf.write("\5w<\2\u00e1\u00e0\3\2\2\2\u00e2\u00e3\3\2\2\2\u00e3\u00e1")
        buf.write("\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e4D\3\2\2\2\u00e5\u00e7")
        buf.write("\5w<\2\u00e6\u00e5\3\2\2\2\u00e7\u00e8\3\2\2\2\u00e8\u00e6")
        buf.write("\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e9\u00ea\3\2\2\2\u00ea")
        buf.write("\u00ec\7\60\2\2\u00eb\u00ed\5w<\2\u00ec\u00eb\3\2\2\2")
        buf.write("\u00ed\u00ee\3\2\2\2\u00ee\u00ec\3\2\2\2\u00ee\u00ef\3")
        buf.write("\2\2\2\u00ef\u00f1\3\2\2\2\u00f0\u00f2\5I%\2\u00f1\u00f0")
        buf.write("\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2\u0104\3\2\2\2\u00f3")
        buf.write("\u00f5\7\60\2\2\u00f4\u00f6\5w<\2\u00f5\u00f4\3\2\2\2")
        buf.write("\u00f6\u00f7\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f7\u00f8\3")
        buf.write("\2\2\2\u00f8\u00fa\3\2\2\2\u00f9\u00fb\5I%\2\u00fa\u00f9")
        buf.write("\3\2\2\2\u00fa\u00fb\3\2\2\2\u00fb\u0104\3\2\2\2\u00fc")
        buf.write("\u00fe\5w<\2\u00fd\u00fc\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ff")
        buf.write("\u00fd\3\2\2\2\u00ff\u0100\3\2\2\2\u0100\u0101\3\2\2\2")
        buf.write("\u0101\u0102\5I%\2\u0102\u0104\3\2\2\2\u0103\u00e6\3\2")
        buf.write("\2\2\u0103\u00f3\3\2\2\2\u0103\u00fd\3\2\2\2\u0104F\3")
        buf.write("\2\2\2\u0105\u0106\7v\2\2\u0106\u0107\7t\2\2\u0107\u0108")
        buf.write("\7w\2\2\u0108\u010f\7g\2\2\u0109\u010a\7h\2\2\u010a\u010b")
        buf.write("\7c\2\2\u010b\u010c\7n\2\2\u010c\u010d\7u\2\2\u010d\u010f")
        buf.write("\7g\2\2\u010e\u0105\3\2\2\2\u010e\u0109\3\2\2\2\u010f")
        buf.write("H\3\2\2\2\u0110\u0112\t\5\2\2\u0111\u0113\t\6\2\2\u0112")
        buf.write("\u0111\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0115\3\2\2\2")
        buf.write("\u0114\u0116\5w<\2\u0115\u0114\3\2\2\2\u0116\u0117\3\2")
        buf.write("\2\2\u0117\u0115\3\2\2\2\u0117\u0118\3\2\2\2\u0118J\3")
        buf.write("\2\2\2\u0119\u011a\7e\2\2\u011a\u011b\7n\2\2\u011b\u011c")
        buf.write("\7c\2\2\u011c\u011d\7u\2\2\u011d\u011e\7u\2\2\u011eL\3")
        buf.write("\2\2\2\u011f\u0120\7c\2\2\u0120\u0121\7v\2\2\u0121\u0122")
        buf.write("\7v\2\2\u0122\u0123\7t\2\2\u0123N\3\2\2\2\u0124\u0125")
        buf.write("\7u\2\2\u0125\u0126\7v\2\2\u0126\u0127\7c\2\2\u0127\u0128")
        buf.write("\7v\2\2\u0128\u0129\7g\2\2\u0129P\3\2\2\2\u012a\u012b")
        buf.write("\7h\2\2\u012b\u012c\7w\2\2\u012c\u012d\7p\2\2\u012d\u012e")
        buf.write("\7e\2\2\u012eR\3\2\2\2\u012f\u0130\7r\2\2\u0130\u0131")
        buf.write("\7t\2\2\u0131\u0132\7g\2\2\u0132\u0133\7f\2\2\u0133T\3")
        buf.write("\2\2\2\u0134\u0135\7q\2\2\u0135\u0136\7r\2\2\u0136\u0137")
        buf.write("\7g\2\2\u0137\u0138\7t\2\2\u0138V\3\2\2\2\u0139\u013a")
        buf.write("\7k\2\2\u013a\u013b\7h\2\2\u013bX\3\2\2\2\u013c\u013d")
        buf.write("\7g\2\2\u013d\u013e\7n\2\2\u013e\u013f\7u\2\2\u013f\u0140")
        buf.write("\7g\2\2\u0140Z\3\2\2\2\u0141\u0142\7g\2\2\u0142\u0143")
        buf.write("\7n\2\2\u0143\u0144\7k\2\2\u0144\u0145\7h\2\2\u0145\\")
        buf.write("\3\2\2\2\u0146\u0147\7h\2\2\u0147\u0148\7q\2\2\u0148\u0149")
        buf.write("\7t\2\2\u0149^\3\2\2\2\u014a\u014b\7y\2\2\u014b\u014c")
        buf.write("\7j\2\2\u014c\u014d\7k\2\2\u014d\u014e\7n\2\2\u014e\u014f")
        buf.write("\7g\2\2\u014f`\3\2\2\2\u0150\u0151\7t\2\2\u0151\u0152")
        buf.write("\7g\2\2\u0152\u0153\7v\2\2\u0153b\3\2\2\2\u0154\u0155")
        buf.write("\7d\2\2\u0155\u0156\7t\2\2\u0156\u0157\7g\2\2\u0157\u0158")
        buf.write("\7c\2\2\u0158\u0159\7m\2\2\u0159d\3\2\2\2\u015a\u015b")
        buf.write("\7e\2\2\u015b\u015c\7q\2\2\u015c\u015d\7p\2\2\u015d\u015e")
        buf.write("\7v\2\2\u015ef\3\2\2\2\u015f\u0160\7y\2\2\u0160\u0161")
        buf.write("\7j\2\2\u0161\u0162\7g\2\2\u0162\u0163\7p\2\2\u0163h\3")
        buf.write("\2\2\2\u0164\u0165\7g\2\2\u0165\u0166\7h\2\2\u0166\u0167")
        buf.write("\7h\2\2\u0167j\3\2\2\2\u0168\u0169\7g\2\2\u0169\u016a")
        buf.write("\7z\2\2\u016a\u016b\7g\2\2\u016b\u016c\7e\2\2\u016cl\3")
        buf.write("\2\2\2\u016d\u016e\7n\2\2\u016e\u016f\7k\2\2\u016f\u0170")
        buf.write("\7u\2\2\u0170\u0171\7v\2\2\u0171n\3\2\2\2\u0172\u0173")
        buf.write("\7d\2\2\u0173\u0174\7q\2\2\u0174\u0175\7q\2\2\u0175\u0176")
        buf.write("\7n\2\2\u0176p\3\2\2\2\u0177\u0178\7u\2\2\u0178\u0179")
        buf.write("\7v\2\2\u0179\u017a\7t\2\2\u017ar\3\2\2\2\u017b\u0181")
        buf.write("\5u;\2\u017c\u0180\5u;\2\u017d\u0180\7a\2\2\u017e\u0180")
        buf.write("\5w<\2\u017f\u017c\3\2\2\2\u017f\u017d\3\2\2\2\u017f\u017e")
        buf.write("\3\2\2\2\u0180\u0183\3\2\2\2\u0181\u017f\3\2\2\2\u0181")
        buf.write("\u0182\3\2\2\2\u0182t\3\2\2\2\u0183\u0181\3\2\2\2\u0184")
        buf.write("\u0185\t\7\2\2\u0185v\3\2\2\2\u0186\u0187\t\b\2\2\u0187")
        buf.write("x\3\2\2\2\u0188\u018c\7%\2\2\u0189\u018b\n\t\2\2\u018a")
        buf.write("\u0189\3\2\2\2\u018b\u018e\3\2\2\2\u018c\u018a\3\2\2\2")
        buf.write("\u018c\u018d\3\2\2\2\u018d\u018f\3\2\2\2\u018e\u018c\3")
        buf.write("\2\2\2\u018f\u0190\b=\2\2\u0190z\3\2\2\2\u0191\u0193\t")
        buf.write("\n\2\2\u0192\u0191\3\2\2\2\u0193\u0194\3\2\2\2\u0194\u0192")
        buf.write("\3\2\2\2\u0194\u0195\3\2\2\2\u0195\u0196\3\2\2\2\u0196")
        buf.write("\u0197\b>\2\2\u0197|\3\2\2\2\27\2\u00cc\u00ce\u00d5\u00d7")
        buf.write("\u00db\u00e3\u00e8\u00ee\u00f1\u00f7\u00fa\u00ff\u0103")
        buf.write("\u010e\u0112\u0117\u017f\u0181\u018c\u0194\3\b\2\2")
        return buf.getvalue()


class EvansLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    STRING_LITERAL = 31
    DECIMAL_LITERAL = 32
    FLOAT_LITERAL = 33
    BOOL_LITERAL = 34
    CLASS = 35
    ATTR = 36
    STATE = 37
    FUNC = 38
    PRED = 39
    OPER = 40
    IF = 41
    ELSE = 42
    ELIF = 43
    FOR = 44
    WHILE = 45
    RET = 46
    BREAK = 47
    CONT = 48
    WHEN = 49
    EFF = 50
    EXEC = 51
    LIST = 52
    BOOL = 53
    STR = 54
    ID = 55
    COMMENT = 56
    WS = 57

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "':'", "','", "';'", "'='", "'('", "')'", "'.'", 
            "'+='", "'-='", "'*='", "'/='", "'%='", "'++'", "'--'", "'not'", 
            "'+'", "'-'", "'*'", "'/'", "'%'", "'<'", "'>'", "'<='", "'>='", 
            "'!='", "'=='", "'and'", "'or'", "'class'", "'attr'", "'state'", 
            "'func'", "'pred'", "'oper'", "'if'", "'else'", "'elif'", "'for'", 
            "'while'", "'ret'", "'break'", "'cont'", "'when'", "'eff'", 
            "'exec'", "'list'", "'bool'", "'str'" ]

    symbolicNames = [ "<INVALID>",
            "STRING_LITERAL", "DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", 
            "CLASS", "ATTR", "STATE", "FUNC", "PRED", "OPER", "IF", "ELSE", 
            "ELIF", "FOR", "WHILE", "RET", "BREAK", "CONT", "WHEN", "EFF", 
            "EXEC", "LIST", "BOOL", "STR", "ID", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "STRING_LITERAL", 
                  "STRING_ESCAPE", "DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", 
                  "EXPONENT", "CLASS", "ATTR", "STATE", "FUNC", "PRED", 
                  "OPER", "IF", "ELSE", "ELIF", "FOR", "WHILE", "RET", "BREAK", 
                  "CONT", "WHEN", "EFF", "EXEC", "LIST", "BOOL", "STR", 
                  "ID", "LETTER", "DIGIT", "COMMENT", "WS" ]

    grammarFileName = "Evans.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


