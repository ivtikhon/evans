# Generated from grammar/Evans.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2C")
        buf.write("\u01c6\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3")
        buf.write("\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13")
        buf.write("\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17")
        buf.write("\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25")
        buf.write("\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3 \3 \3!\3!\3!\7!\u00da\n!\f")
        buf.write("!\16!\u00dd\13!\3!\3!\3!\3!\7!\u00e3\n!\f!\16!\u00e6\13")
        buf.write("!\3!\5!\u00e9\n!\3\"\3\"\3\"\3#\6#\u00ef\n#\r#\16#\u00f0")
        buf.write("\3$\6$\u00f4\n$\r$\16$\u00f5\3$\3$\6$\u00fa\n$\r$\16$")
        buf.write("\u00fb\3$\5$\u00ff\n$\3$\3$\6$\u0103\n$\r$\16$\u0104\3")
        buf.write("$\5$\u0108\n$\3$\6$\u010b\n$\r$\16$\u010c\3$\3$\5$\u0111")
        buf.write("\n$\3%\3%\3%\3%\3%\3%\3%\3%\3%\5%\u011c\n%\3&\3&\5&\u0120")
        buf.write("\n&\3&\6&\u0123\n&\r&\16&\u0124\3\'\3\'\3\'\3\'\3\'\3")
        buf.write("\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3+")
        buf.write("\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3.\3.\3.\3.\3.\3")
        buf.write("/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61")
        buf.write("\3\61\3\61\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63")
        buf.write("\3\63\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65")
        buf.write("\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\38\38\3")
        buf.write("8\38\38\39\39\39\39\39\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3")
        buf.write("<\3<\3<\3<\3<\3=\3=\3=\3=\3>\3>\3>\3>\3>\3>\3?\3?\3?\3")
        buf.write("?\3@\3@\3@\3@\3A\3A\3A\3A\3B\3B\3B\3B\7B\u01ae\nB\fB\16")
        buf.write("B\u01b1\13B\3C\3C\3D\3D\3E\3E\7E\u01b9\nE\fE\16E\u01bc")
        buf.write("\13E\3E\3E\3F\6F\u01c1\nF\rF\16F\u01c2\3F\3F\2\2G\3\3")
        buf.write("\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16")
        buf.write("\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61")
        buf.write("\32\63\33\65\34\67\359\36;\37= ?!A\"C\2E#G$I%K\2M&O\'")
        buf.write("Q(S)U*W+Y,[-]._/a\60c\61e\62g\63i\64k\65m\66o\67q8s9u")
        buf.write(":w;y<{=}>\177?\u0081@\u0083A\u0085\2\u0087\2\u0089B\u008b")
        buf.write("C\3\2\13\4\2$$^^\4\2))^^\n\2$$))^^ddhhppttvv\4\2GGgg\4")
        buf.write("\2--//\4\2C\\c|\3\2\62;\4\2\f\f\16\17\5\2\13\f\17\17\"")
        buf.write("\"\2\u01d7\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2")
        buf.write("\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2")
        buf.write("\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2")
        buf.write("\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#")
        buf.write("\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2")
        buf.write("\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2")
        buf.write("\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3")
        buf.write("\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i")
        buf.write("\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2")
        buf.write("s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2")
        buf.write("\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2")
        buf.write("\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\3\u008d\3\2\2\2\5")
        buf.write("\u008f\3\2\2\2\7\u0091\3\2\2\2\t\u0093\3\2\2\2\13\u0095")
        buf.write("\3\2\2\2\r\u0097\3\2\2\2\17\u0099\3\2\2\2\21\u009b\3\2")
        buf.write("\2\2\23\u009d\3\2\2\2\25\u009f\3\2\2\2\27\u00a2\3\2\2")
        buf.write("\2\31\u00a5\3\2\2\2\33\u00a8\3\2\2\2\35\u00ab\3\2\2\2")
        buf.write("\37\u00ae\3\2\2\2!\u00b0\3\2\2\2#\u00b2\3\2\2\2%\u00b4")
        buf.write("\3\2\2\2\'\u00b6\3\2\2\2)\u00b8\3\2\2\2+\u00ba\3\2\2\2")
        buf.write("-\u00bc\3\2\2\2/\u00be\3\2\2\2\61\u00c0\3\2\2\2\63\u00c2")
        buf.write("\3\2\2\2\65\u00c5\3\2\2\2\67\u00c8\3\2\2\29\u00cb\3\2")
        buf.write("\2\2;\u00ce\3\2\2\2=\u00d1\3\2\2\2?\u00d4\3\2\2\2A\u00e8")
        buf.write("\3\2\2\2C\u00ea\3\2\2\2E\u00ee\3\2\2\2G\u0110\3\2\2\2")
        buf.write("I\u011b\3\2\2\2K\u011d\3\2\2\2M\u0126\3\2\2\2O\u012c\3")
        buf.write("\2\2\2Q\u0131\3\2\2\2S\u0137\3\2\2\2U\u013c\3\2\2\2W\u0141")
        buf.write("\3\2\2\2Y\u0146\3\2\2\2[\u0149\3\2\2\2]\u014e\3\2\2\2")
        buf.write("_\u0153\3\2\2\2a\u0157\3\2\2\2c\u015d\3\2\2\2e\u0161\3")
        buf.write("\2\2\2g\u0167\3\2\2\2i\u016c\3\2\2\2k\u0171\3\2\2\2m\u0175")
        buf.write("\3\2\2\2o\u017a\3\2\2\2q\u017f\3\2\2\2s\u0184\3\2\2\2")
        buf.write("u\u0189\3\2\2\2w\u018e\3\2\2\2y\u0193\3\2\2\2{\u0197\3")
        buf.write("\2\2\2}\u019d\3\2\2\2\177\u01a1\3\2\2\2\u0081\u01a5\3")
        buf.write("\2\2\2\u0083\u01a9\3\2\2\2\u0085\u01b2\3\2\2\2\u0087\u01b4")
        buf.write("\3\2\2\2\u0089\u01b6\3\2\2\2\u008b\u01c0\3\2\2\2\u008d")
        buf.write("\u008e\7}\2\2\u008e\4\3\2\2\2\u008f\u0090\7\177\2\2\u0090")
        buf.write("\6\3\2\2\2\u0091\u0092\7<\2\2\u0092\b\3\2\2\2\u0093\u0094")
        buf.write("\7.\2\2\u0094\n\3\2\2\2\u0095\u0096\7=\2\2\u0096\f\3\2")
        buf.write("\2\2\u0097\u0098\7?\2\2\u0098\16\3\2\2\2\u0099\u009a\7")
        buf.write("*\2\2\u009a\20\3\2\2\2\u009b\u009c\7+\2\2\u009c\22\3\2")
        buf.write("\2\2\u009d\u009e\7\60\2\2\u009e\24\3\2\2\2\u009f\u00a0")
        buf.write("\7-\2\2\u00a0\u00a1\7?\2\2\u00a1\26\3\2\2\2\u00a2\u00a3")
        buf.write("\7/\2\2\u00a3\u00a4\7?\2\2\u00a4\30\3\2\2\2\u00a5\u00a6")
        buf.write("\7,\2\2\u00a6\u00a7\7?\2\2\u00a7\32\3\2\2\2\u00a8\u00a9")
        buf.write("\7\61\2\2\u00a9\u00aa\7?\2\2\u00aa\34\3\2\2\2\u00ab\u00ac")
        buf.write("\7\'\2\2\u00ac\u00ad\7?\2\2\u00ad\36\3\2\2\2\u00ae\u00af")
        buf.write("\7]\2\2\u00af \3\2\2\2\u00b0\u00b1\7_\2\2\u00b1\"\3\2")
        buf.write("\2\2\u00b2\u00b3\7#\2\2\u00b3$\3\2\2\2\u00b4\u00b5\7-")
        buf.write("\2\2\u00b5&\3\2\2\2\u00b6\u00b7\7/\2\2\u00b7(\3\2\2\2")
        buf.write("\u00b8\u00b9\7,\2\2\u00b9*\3\2\2\2\u00ba\u00bb\7\61\2")
        buf.write("\2\u00bb,\3\2\2\2\u00bc\u00bd\7\'\2\2\u00bd.\3\2\2\2\u00be")
        buf.write("\u00bf\7>\2\2\u00bf\60\3\2\2\2\u00c0\u00c1\7@\2\2\u00c1")
        buf.write("\62\3\2\2\2\u00c2\u00c3\7>\2\2\u00c3\u00c4\7?\2\2\u00c4")
        buf.write("\64\3\2\2\2\u00c5\u00c6\7@\2\2\u00c6\u00c7\7?\2\2\u00c7")
        buf.write("\66\3\2\2\2\u00c8\u00c9\7#\2\2\u00c9\u00ca\7?\2\2\u00ca")
        buf.write("8\3\2\2\2\u00cb\u00cc\7?\2\2\u00cc\u00cd\7?\2\2\u00cd")
        buf.write(":\3\2\2\2\u00ce\u00cf\7(\2\2\u00cf\u00d0\7(\2\2\u00d0")
        buf.write("<\3\2\2\2\u00d1\u00d2\7~\2\2\u00d2\u00d3\7~\2\2\u00d3")
        buf.write(">\3\2\2\2\u00d4\u00d5\7A\2\2\u00d5@\3\2\2\2\u00d6\u00db")
        buf.write("\7$\2\2\u00d7\u00da\5C\"\2\u00d8\u00da\n\2\2\2\u00d9\u00d7")
        buf.write("\3\2\2\2\u00d9\u00d8\3\2\2\2\u00da\u00dd\3\2\2\2\u00db")
        buf.write("\u00d9\3\2\2\2\u00db\u00dc\3\2\2\2\u00dc\u00de\3\2\2\2")
        buf.write("\u00dd\u00db\3\2\2\2\u00de\u00e9\7$\2\2\u00df\u00e4\7")
        buf.write(")\2\2\u00e0\u00e3\5C\"\2\u00e1\u00e3\n\3\2\2\u00e2\u00e0")
        buf.write("\3\2\2\2\u00e2\u00e1\3\2\2\2\u00e3\u00e6\3\2\2\2\u00e4")
        buf.write("\u00e2\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e5\u00e7\3\2\2\2")
        buf.write("\u00e6\u00e4\3\2\2\2\u00e7\u00e9\7)\2\2\u00e8\u00d6\3")
        buf.write("\2\2\2\u00e8\u00df\3\2\2\2\u00e9B\3\2\2\2\u00ea\u00eb")
        buf.write("\7^\2\2\u00eb\u00ec\t\4\2\2\u00ecD\3\2\2\2\u00ed\u00ef")
        buf.write("\5\u0087D\2\u00ee\u00ed\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0")
        buf.write("\u00ee\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1F\3\2\2\2\u00f2")
        buf.write("\u00f4\5\u0087D\2\u00f3\u00f2\3\2\2\2\u00f4\u00f5\3\2")
        buf.write("\2\2\u00f5\u00f3\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6\u00f7")
        buf.write("\3\2\2\2\u00f7\u00f9\7\60\2\2\u00f8\u00fa\5\u0087D\2\u00f9")
        buf.write("\u00f8\3\2\2\2\u00fa\u00fb\3\2\2\2\u00fb\u00f9\3\2\2\2")
        buf.write("\u00fb\u00fc\3\2\2\2\u00fc\u00fe\3\2\2\2\u00fd\u00ff\5")
        buf.write("K&\2\u00fe\u00fd\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ff\u0111")
        buf.write("\3\2\2\2\u0100\u0102\7\60\2\2\u0101\u0103\5\u0087D\2\u0102")
        buf.write("\u0101\3\2\2\2\u0103\u0104\3\2\2\2\u0104\u0102\3\2\2\2")
        buf.write("\u0104\u0105\3\2\2\2\u0105\u0107\3\2\2\2\u0106\u0108\5")
        buf.write("K&\2\u0107\u0106\3\2\2\2\u0107\u0108\3\2\2\2\u0108\u0111")
        buf.write("\3\2\2\2\u0109\u010b\5\u0087D\2\u010a\u0109\3\2\2\2\u010b")
        buf.write("\u010c\3\2\2\2\u010c\u010a\3\2\2\2\u010c\u010d\3\2\2\2")
        buf.write("\u010d\u010e\3\2\2\2\u010e\u010f\5K&\2\u010f\u0111\3\2")
        buf.write("\2\2\u0110\u00f3\3\2\2\2\u0110\u0100\3\2\2\2\u0110\u010a")
        buf.write("\3\2\2\2\u0111H\3\2\2\2\u0112\u0113\7v\2\2\u0113\u0114")
        buf.write("\7t\2\2\u0114\u0115\7w\2\2\u0115\u011c\7g\2\2\u0116\u0117")
        buf.write("\7h\2\2\u0117\u0118\7c\2\2\u0118\u0119\7n\2\2\u0119\u011a")
        buf.write("\7u\2\2\u011a\u011c\7g\2\2\u011b\u0112\3\2\2\2\u011b\u0116")
        buf.write("\3\2\2\2\u011cJ\3\2\2\2\u011d\u011f\t\5\2\2\u011e\u0120")
        buf.write("\t\6\2\2\u011f\u011e\3\2\2\2\u011f\u0120\3\2\2\2\u0120")
        buf.write("\u0122\3\2\2\2\u0121\u0123\5\u0087D\2\u0122\u0121\3\2")
        buf.write("\2\2\u0123\u0124\3\2\2\2\u0124\u0122\3\2\2\2\u0124\u0125")
        buf.write("\3\2\2\2\u0125L\3\2\2\2\u0126\u0127\7e\2\2\u0127\u0128")
        buf.write("\7n\2\2\u0128\u0129\7c\2\2\u0129\u012a\7u\2\2\u012a\u012b")
        buf.write("\7u\2\2\u012bN\3\2\2\2\u012c\u012d\7c\2\2\u012d\u012e")
        buf.write("\7v\2\2\u012e\u012f\7v\2\2\u012f\u0130\7t\2\2\u0130P\3")
        buf.write("\2\2\2\u0131\u0132\7u\2\2\u0132\u0133\7v\2\2\u0133\u0134")
        buf.write("\7c\2\2\u0134\u0135\7v\2\2\u0135\u0136\7g\2\2\u0136R\3")
        buf.write("\2\2\2\u0137\u0138\7h\2\2\u0138\u0139\7w\2\2\u0139\u013a")
        buf.write("\7p\2\2\u013a\u013b\7e\2\2\u013bT\3\2\2\2\u013c\u013d")
        buf.write("\7r\2\2\u013d\u013e\7t\2\2\u013e\u013f\7g\2\2\u013f\u0140")
        buf.write("\7f\2\2\u0140V\3\2\2\2\u0141\u0142\7q\2\2\u0142\u0143")
        buf.write("\7r\2\2\u0143\u0144\7g\2\2\u0144\u0145\7t\2\2\u0145X\3")
        buf.write("\2\2\2\u0146\u0147\7k\2\2\u0147\u0148\7h\2\2\u0148Z\3")
        buf.write("\2\2\2\u0149\u014a\7g\2\2\u014a\u014b\7n\2\2\u014b\u014c")
        buf.write("\7u\2\2\u014c\u014d\7g\2\2\u014d\\\3\2\2\2\u014e\u014f")
        buf.write("\7g\2\2\u014f\u0150\7n\2\2\u0150\u0151\7k\2\2\u0151\u0152")
        buf.write("\7h\2\2\u0152^\3\2\2\2\u0153\u0154\7h\2\2\u0154\u0155")
        buf.write("\7q\2\2\u0155\u0156\7t\2\2\u0156`\3\2\2\2\u0157\u0158")
        buf.write("\7y\2\2\u0158\u0159\7j\2\2\u0159\u015a\7k\2\2\u015a\u015b")
        buf.write("\7n\2\2\u015b\u015c\7g\2\2\u015cb\3\2\2\2\u015d\u015e")
        buf.write("\7t\2\2\u015e\u015f\7g\2\2\u015f\u0160\7v\2\2\u0160d\3")
        buf.write("\2\2\2\u0161\u0162\7d\2\2\u0162\u0163\7t\2\2\u0163\u0164")
        buf.write("\7g\2\2\u0164\u0165\7c\2\2\u0165\u0166\7m\2\2\u0166f\3")
        buf.write("\2\2\2\u0167\u0168\7e\2\2\u0168\u0169\7q\2\2\u0169\u016a")
        buf.write("\7p\2\2\u016a\u016b\7v\2\2\u016bh\3\2\2\2\u016c\u016d")
        buf.write("\7y\2\2\u016d\u016e\7j\2\2\u016e\u016f\7g\2\2\u016f\u0170")
        buf.write("\7p\2\2\u0170j\3\2\2\2\u0171\u0172\7g\2\2\u0172\u0173")
        buf.write("\7h\2\2\u0173\u0174\7h\2\2\u0174l\3\2\2\2\u0175\u0176")
        buf.write("\7g\2\2\u0176\u0177\7z\2\2\u0177\u0178\7g\2\2\u0178\u0179")
        buf.write("\7e\2\2\u0179n\3\2\2\2\u017a\u017b\7k\2\2\u017b\u017c")
        buf.write("\7p\2\2\u017c\u017d\7k\2\2\u017d\u017e\7v\2\2\u017ep\3")
        buf.write("\2\2\2\u017f\u0180\7i\2\2\u0180\u0181\7q\2\2\u0181\u0182")
        buf.write("\7c\2\2\u0182\u0183\7n\2\2\u0183r\3\2\2\2\u0184\u0185")
        buf.write("\7o\2\2\u0185\u0186\7c\2\2\u0186\u0187\7k\2\2\u0187\u0188")
        buf.write("\7p\2\2\u0188t\3\2\2\2\u0189\u018a\7n\2\2\u018a\u018b")
        buf.write("\7k\2\2\u018b\u018c\7u\2\2\u018c\u018d\7v\2\2\u018dv\3")
        buf.write("\2\2\2\u018e\u018f\7d\2\2\u018f\u0190\7q\2\2\u0190\u0191")
        buf.write("\7q\2\2\u0191\u0192\7n\2\2\u0192x\3\2\2\2\u0193\u0194")
        buf.write("\7u\2\2\u0194\u0195\7v\2\2\u0195\u0196\7t\2\2\u0196z\3")
        buf.write("\2\2\2\u0197\u0198\7h\2\2\u0198\u0199\7n\2\2\u0199\u019a")
        buf.write("\7q\2\2\u019a\u019b\7c\2\2\u019b\u019c\7v\2\2\u019c|\3")
        buf.write("\2\2\2\u019d\u019e\7k\2\2\u019e\u019f\7p\2\2\u019f\u01a0")
        buf.write("\7v\2\2\u01a0~\3\2\2\2\u01a1\u01a2\7f\2\2\u01a2\u01a3")
        buf.write("\7q\2\2\u01a3\u01a4\7o\2\2\u01a4\u0080\3\2\2\2\u01a5\u01a6")
        buf.write("\7p\2\2\u01a6\u01a7\7w\2\2\u01a7\u01a8\7o\2\2\u01a8\u0082")
        buf.write("\3\2\2\2\u01a9\u01af\5\u0085C\2\u01aa\u01ae\5\u0085C\2")
        buf.write("\u01ab\u01ae\7a\2\2\u01ac\u01ae\5\u0087D\2\u01ad\u01aa")
        buf.write("\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ad\u01ac\3\2\2\2\u01ae")
        buf.write("\u01b1\3\2\2\2\u01af\u01ad\3\2\2\2\u01af\u01b0\3\2\2\2")
        buf.write("\u01b0\u0084\3\2\2\2\u01b1\u01af\3\2\2\2\u01b2\u01b3\t")
        buf.write("\7\2\2\u01b3\u0086\3\2\2\2\u01b4\u01b5\t\b\2\2\u01b5\u0088")
        buf.write("\3\2\2\2\u01b6\u01ba\7%\2\2\u01b7\u01b9\n\t\2\2\u01b8")
        buf.write("\u01b7\3\2\2\2\u01b9\u01bc\3\2\2\2\u01ba\u01b8\3\2\2\2")
        buf.write("\u01ba\u01bb\3\2\2\2\u01bb\u01bd\3\2\2\2\u01bc\u01ba\3")
        buf.write("\2\2\2\u01bd\u01be\bE\2\2\u01be\u008a\3\2\2\2\u01bf\u01c1")
        buf.write("\t\n\2\2\u01c0\u01bf\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2")
        buf.write("\u01c0\3\2\2\2\u01c2\u01c3\3\2\2\2\u01c3\u01c4\3\2\2\2")
        buf.write("\u01c4\u01c5\bF\2\2\u01c5\u008c\3\2\2\2\27\2\u00d9\u00db")
        buf.write("\u00e2\u00e4\u00e8\u00f0\u00f5\u00fb\u00fe\u0104\u0107")
        buf.write("\u010c\u0110\u011b\u011f\u0124\u01ad\u01af\u01ba\u01c2")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class EvansLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    STRING_LITERAL = 32
    DECIMAL_LITERAL = 33
    FLOAT_LITERAL = 34
    BOOL_LITERAL = 35
    CLASS = 36
    ATTR = 37
    STATE = 38
    FUNC = 39
    PRED = 40
    OPER = 41
    IF = 42
    ELSE = 43
    ELIF = 44
    FOR = 45
    WHILE = 46
    RET = 47
    BREAK = 48
    CONT = 49
    WHEN = 50
    EFF = 51
    EXEC = 52
    INIT = 53
    GOAL = 54
    MAIN = 55
    LIST = 56
    BOOL = 57
    STR = 58
    FLOAT = 59
    INT = 60
    DOM = 61
    NUM = 62
    ID = 63
    COMMENT = 64
    WS = 65

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "':'", "','", "';'", "'='", "'('", "')'", "'.'", 
            "'+='", "'-='", "'*='", "'/='", "'%='", "'['", "']'", "'!'", 
            "'+'", "'-'", "'*'", "'/'", "'%'", "'<'", "'>'", "'<='", "'>='", 
            "'!='", "'=='", "'&&'", "'||'", "'?'", "'class'", "'attr'", 
            "'state'", "'func'", "'pred'", "'oper'", "'if'", "'else'", "'elif'", 
            "'for'", "'while'", "'ret'", "'break'", "'cont'", "'when'", 
            "'eff'", "'exec'", "'init'", "'goal'", "'main'", "'list'", "'bool'", 
            "'str'", "'float'", "'int'", "'dom'", "'num'" ]

    symbolicNames = [ "<INVALID>",
            "STRING_LITERAL", "DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", 
            "CLASS", "ATTR", "STATE", "FUNC", "PRED", "OPER", "IF", "ELSE", 
            "ELIF", "FOR", "WHILE", "RET", "BREAK", "CONT", "WHEN", "EFF", 
            "EXEC", "INIT", "GOAL", "MAIN", "LIST", "BOOL", "STR", "FLOAT", 
            "INT", "DOM", "NUM", "ID", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "STRING_LITERAL", 
                  "STRING_ESCAPE", "DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", 
                  "EXPONENT", "CLASS", "ATTR", "STATE", "FUNC", "PRED", 
                  "OPER", "IF", "ELSE", "ELIF", "FOR", "WHILE", "RET", "BREAK", 
                  "CONT", "WHEN", "EFF", "EXEC", "INIT", "GOAL", "MAIN", 
                  "LIST", "BOOL", "STR", "FLOAT", "INT", "DOM", "NUM", "ID", 
                  "LETTER", "DIGIT", "COMMENT", "WS" ]

    grammarFileName = "Evans.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


