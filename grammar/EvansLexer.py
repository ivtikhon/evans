# Generated from grammar/Evans.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2@")
        buf.write("\u01b9\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b")
        buf.write("\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3")
        buf.write("\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3")
        buf.write("\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24")
        buf.write("\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \7 \u00d7")
        buf.write("\n \f \16 \u00da\13 \3 \3 \3 \3 \7 \u00e0\n \f \16 \u00e3")
        buf.write("\13 \3 \5 \u00e6\n \3!\3!\3!\3\"\6\"\u00ec\n\"\r\"\16")
        buf.write("\"\u00ed\3#\6#\u00f1\n#\r#\16#\u00f2\3#\3#\6#\u00f7\n")
        buf.write("#\r#\16#\u00f8\3#\5#\u00fc\n#\3#\3#\6#\u0100\n#\r#\16")
        buf.write("#\u0101\3#\5#\u0105\n#\3#\6#\u0108\n#\r#\16#\u0109\3#")
        buf.write("\3#\5#\u010e\n#\3$\3$\3$\3$\3$\3$\3$\3$\3$\5$\u0119\n")
        buf.write("$\3%\3%\5%\u011d\n%\3%\6%\u0120\n%\r%\16%\u0121\3&\3&")
        buf.write("\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)")
        buf.write("\3)\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3")
        buf.write("-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3\60\3\60\3\60")
        buf.write("\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62")
        buf.write("\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64")
        buf.write("\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\67")
        buf.write("\3\67\3\67\3\67\3\67\38\38\38\38\38\39\39\39\39\39\3:")
        buf.write("\3:\3:\3:\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3=\3=\3=\3=\3")
        buf.write(">\3>\3>\3>\3?\3?\3?\3?\7?\u01a1\n?\f?\16?\u01a4\13?\3")
        buf.write("@\3@\3A\3A\3B\3B\7B\u01ac\nB\fB\16B\u01af\13B\3B\3B\3")
        buf.write("C\6C\u01b4\nC\rC\16C\u01b5\3C\3C\2\2D\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\2C\"E#G$I\2K%M&O\'Q(S)U*W+Y,[-")
        buf.write("]._/a\60c\61e\62g\63i\64k\65m\66o\67q8s9u:w;y<{=}>\177")
        buf.write("\2\u0081\2\u0083?\u0085@\3\2\13\4\2$$^^\4\2))^^\n\2$$")
        buf.write("))^^ddhhppttvv\4\2GGgg\4\2--//\4\2C\\c|\3\2\62;\4\2\f")
        buf.write("\f\16\17\5\2\13\f\17\17\"\"\2\u01ca\2\3\3\2\2\2\2\5\3")
        buf.write("\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2")
        buf.write("\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2")
        buf.write("\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2")
        buf.write("\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2")
        buf.write("\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3")
        buf.write("\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2")
        buf.write("\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2C\3\2\2\2\2E\3\2")
        buf.write("\2\2\2G\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3")
        buf.write("\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[")
        buf.write("\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2")
        buf.write("e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2")
        buf.write("\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2")
        buf.write("\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\u0083\3\2\2\2\2")
        buf.write("\u0085\3\2\2\2\3\u0087\3\2\2\2\5\u0089\3\2\2\2\7\u008b")
        buf.write("\3\2\2\2\t\u008d\3\2\2\2\13\u008f\3\2\2\2\r\u0091\3\2")
        buf.write("\2\2\17\u0093\3\2\2\2\21\u0095\3\2\2\2\23\u0097\3\2\2")
        buf.write("\2\25\u0099\3\2\2\2\27\u009c\3\2\2\2\31\u009f\3\2\2\2")
        buf.write("\33\u00a2\3\2\2\2\35\u00a5\3\2\2\2\37\u00a8\3\2\2\2!\u00ab")
        buf.write("\3\2\2\2#\u00ae\3\2\2\2%\u00b2\3\2\2\2\'\u00b4\3\2\2\2")
        buf.write(")\u00b6\3\2\2\2+\u00b8\3\2\2\2-\u00ba\3\2\2\2/\u00bc\3")
        buf.write("\2\2\2\61\u00be\3\2\2\2\63\u00c0\3\2\2\2\65\u00c3\3\2")
        buf.write("\2\2\67\u00c6\3\2\2\29\u00c9\3\2\2\2;\u00cc\3\2\2\2=\u00d0")
        buf.write("\3\2\2\2?\u00e5\3\2\2\2A\u00e7\3\2\2\2C\u00eb\3\2\2\2")
        buf.write("E\u010d\3\2\2\2G\u0118\3\2\2\2I\u011a\3\2\2\2K\u0123\3")
        buf.write("\2\2\2M\u0129\3\2\2\2O\u012e\3\2\2\2Q\u0134\3\2\2\2S\u0139")
        buf.write("\3\2\2\2U\u013e\3\2\2\2W\u0143\3\2\2\2Y\u0146\3\2\2\2")
        buf.write("[\u014b\3\2\2\2]\u0150\3\2\2\2_\u0154\3\2\2\2a\u015a\3")
        buf.write("\2\2\2c\u015e\3\2\2\2e\u0164\3\2\2\2g\u0169\3\2\2\2i\u016e")
        buf.write("\3\2\2\2k\u0172\3\2\2\2m\u0177\3\2\2\2o\u017c\3\2\2\2")
        buf.write("q\u0181\3\2\2\2s\u0186\3\2\2\2u\u018a\3\2\2\2w\u0190\3")
        buf.write("\2\2\2y\u0194\3\2\2\2{\u0198\3\2\2\2}\u019c\3\2\2\2\177")
        buf.write("\u01a5\3\2\2\2\u0081\u01a7\3\2\2\2\u0083\u01a9\3\2\2\2")
        buf.write("\u0085\u01b3\3\2\2\2\u0087\u0088\7}\2\2\u0088\4\3\2\2")
        buf.write("\2\u0089\u008a\7\177\2\2\u008a\6\3\2\2\2\u008b\u008c\7")
        buf.write("<\2\2\u008c\b\3\2\2\2\u008d\u008e\7.\2\2\u008e\n\3\2\2")
        buf.write("\2\u008f\u0090\7=\2\2\u0090\f\3\2\2\2\u0091\u0092\7?\2")
        buf.write("\2\u0092\16\3\2\2\2\u0093\u0094\7*\2\2\u0094\20\3\2\2")
        buf.write("\2\u0095\u0096\7+\2\2\u0096\22\3\2\2\2\u0097\u0098\7\60")
        buf.write("\2\2\u0098\24\3\2\2\2\u0099\u009a\7-\2\2\u009a\u009b\7")
        buf.write("?\2\2\u009b\26\3\2\2\2\u009c\u009d\7/\2\2\u009d\u009e")
        buf.write("\7?\2\2\u009e\30\3\2\2\2\u009f\u00a0\7,\2\2\u00a0\u00a1")
        buf.write("\7?\2\2\u00a1\32\3\2\2\2\u00a2\u00a3\7\61\2\2\u00a3\u00a4")
        buf.write("\7?\2\2\u00a4\34\3\2\2\2\u00a5\u00a6\7\'\2\2\u00a6\u00a7")
        buf.write("\7?\2\2\u00a7\36\3\2\2\2\u00a8\u00a9\7-\2\2\u00a9\u00aa")
        buf.write("\7-\2\2\u00aa \3\2\2\2\u00ab\u00ac\7/\2\2\u00ac\u00ad")
        buf.write("\7/\2\2\u00ad\"\3\2\2\2\u00ae\u00af\7p\2\2\u00af\u00b0")
        buf.write("\7q\2\2\u00b0\u00b1\7v\2\2\u00b1$\3\2\2\2\u00b2\u00b3")
        buf.write("\7-\2\2\u00b3&\3\2\2\2\u00b4\u00b5\7/\2\2\u00b5(\3\2\2")
        buf.write("\2\u00b6\u00b7\7,\2\2\u00b7*\3\2\2\2\u00b8\u00b9\7\61")
        buf.write("\2\2\u00b9,\3\2\2\2\u00ba\u00bb\7\'\2\2\u00bb.\3\2\2\2")
        buf.write("\u00bc\u00bd\7>\2\2\u00bd\60\3\2\2\2\u00be\u00bf\7@\2")
        buf.write("\2\u00bf\62\3\2\2\2\u00c0\u00c1\7>\2\2\u00c1\u00c2\7?")
        buf.write("\2\2\u00c2\64\3\2\2\2\u00c3\u00c4\7@\2\2\u00c4\u00c5\7")
        buf.write("?\2\2\u00c5\66\3\2\2\2\u00c6\u00c7\7#\2\2\u00c7\u00c8")
        buf.write("\7?\2\2\u00c88\3\2\2\2\u00c9\u00ca\7?\2\2\u00ca\u00cb")
        buf.write("\7?\2\2\u00cb:\3\2\2\2\u00cc\u00cd\7c\2\2\u00cd\u00ce")
        buf.write("\7p\2\2\u00ce\u00cf\7f\2\2\u00cf<\3\2\2\2\u00d0\u00d1")
        buf.write("\7q\2\2\u00d1\u00d2\7t\2\2\u00d2>\3\2\2\2\u00d3\u00d8")
        buf.write("\7$\2\2\u00d4\u00d7\5A!\2\u00d5\u00d7\n\2\2\2\u00d6\u00d4")
        buf.write("\3\2\2\2\u00d6\u00d5\3\2\2\2\u00d7\u00da\3\2\2\2\u00d8")
        buf.write("\u00d6\3\2\2\2\u00d8\u00d9\3\2\2\2\u00d9\u00db\3\2\2\2")
        buf.write("\u00da\u00d8\3\2\2\2\u00db\u00e6\7$\2\2\u00dc\u00e1\7")
        buf.write(")\2\2\u00dd\u00e0\5A!\2\u00de\u00e0\n\3\2\2\u00df\u00dd")
        buf.write("\3\2\2\2\u00df\u00de\3\2\2\2\u00e0\u00e3\3\2\2\2\u00e1")
        buf.write("\u00df\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e2\u00e4\3\2\2\2")
        buf.write("\u00e3\u00e1\3\2\2\2\u00e4\u00e6\7)\2\2\u00e5\u00d3\3")
        buf.write("\2\2\2\u00e5\u00dc\3\2\2\2\u00e6@\3\2\2\2\u00e7\u00e8")
        buf.write("\7^\2\2\u00e8\u00e9\t\4\2\2\u00e9B\3\2\2\2\u00ea\u00ec")
        buf.write("\5\u0081A\2\u00eb\u00ea\3\2\2\2\u00ec\u00ed\3\2\2\2\u00ed")
        buf.write("\u00eb\3\2\2\2\u00ed\u00ee\3\2\2\2\u00eeD\3\2\2\2\u00ef")
        buf.write("\u00f1\5\u0081A\2\u00f0\u00ef\3\2\2\2\u00f1\u00f2\3\2")
        buf.write("\2\2\u00f2\u00f0\3\2\2\2\u00f2\u00f3\3\2\2\2\u00f3\u00f4")
        buf.write("\3\2\2\2\u00f4\u00f6\7\60\2\2\u00f5\u00f7\5\u0081A\2\u00f6")
        buf.write("\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8\u00f6\3\2\2\2")
        buf.write("\u00f8\u00f9\3\2\2\2\u00f9\u00fb\3\2\2\2\u00fa\u00fc\5")
        buf.write("I%\2\u00fb\u00fa\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u010e")
        buf.write("\3\2\2\2\u00fd\u00ff\7\60\2\2\u00fe\u0100\5\u0081A\2\u00ff")
        buf.write("\u00fe\3\2\2\2\u0100\u0101\3\2\2\2\u0101\u00ff\3\2\2\2")
        buf.write("\u0101\u0102\3\2\2\2\u0102\u0104\3\2\2\2\u0103\u0105\5")
        buf.write("I%\2\u0104\u0103\3\2\2\2\u0104\u0105\3\2\2\2\u0105\u010e")
        buf.write("\3\2\2\2\u0106\u0108\5\u0081A\2\u0107\u0106\3\2\2\2\u0108")
        buf.write("\u0109\3\2\2\2\u0109\u0107\3\2\2\2\u0109\u010a\3\2\2\2")
        buf.write("\u010a\u010b\3\2\2\2\u010b\u010c\5I%\2\u010c\u010e\3\2")
        buf.write("\2\2\u010d\u00f0\3\2\2\2\u010d\u00fd\3\2\2\2\u010d\u0107")
        buf.write("\3\2\2\2\u010eF\3\2\2\2\u010f\u0110\7v\2\2\u0110\u0111")
        buf.write("\7t\2\2\u0111\u0112\7w\2\2\u0112\u0119\7g\2\2\u0113\u0114")
        buf.write("\7h\2\2\u0114\u0115\7c\2\2\u0115\u0116\7n\2\2\u0116\u0117")
        buf.write("\7u\2\2\u0117\u0119\7g\2\2\u0118\u010f\3\2\2\2\u0118\u0113")
        buf.write("\3\2\2\2\u0119H\3\2\2\2\u011a\u011c\t\5\2\2\u011b\u011d")
        buf.write("\t\6\2\2\u011c\u011b\3\2\2\2\u011c\u011d\3\2\2\2\u011d")
        buf.write("\u011f\3\2\2\2\u011e\u0120\5\u0081A\2\u011f\u011e\3\2")
        buf.write("\2\2\u0120\u0121\3\2\2\2\u0121\u011f\3\2\2\2\u0121\u0122")
        buf.write("\3\2\2\2\u0122J\3\2\2\2\u0123\u0124\7e\2\2\u0124\u0125")
        buf.write("\7n\2\2\u0125\u0126\7c\2\2\u0126\u0127\7u\2\2\u0127\u0128")
        buf.write("\7u\2\2\u0128L\3\2\2\2\u0129\u012a\7c\2\2\u012a\u012b")
        buf.write("\7v\2\2\u012b\u012c\7v\2\2\u012c\u012d\7t\2\2\u012dN\3")
        buf.write("\2\2\2\u012e\u012f\7u\2\2\u012f\u0130\7v\2\2\u0130\u0131")
        buf.write("\7c\2\2\u0131\u0132\7v\2\2\u0132\u0133\7g\2\2\u0133P\3")
        buf.write("\2\2\2\u0134\u0135\7h\2\2\u0135\u0136\7w\2\2\u0136\u0137")
        buf.write("\7p\2\2\u0137\u0138\7e\2\2\u0138R\3\2\2\2\u0139\u013a")
        buf.write("\7r\2\2\u013a\u013b\7t\2\2\u013b\u013c\7g\2\2\u013c\u013d")
        buf.write("\7f\2\2\u013dT\3\2\2\2\u013e\u013f\7q\2\2\u013f\u0140")
        buf.write("\7r\2\2\u0140\u0141\7g\2\2\u0141\u0142\7t\2\2\u0142V\3")
        buf.write("\2\2\2\u0143\u0144\7k\2\2\u0144\u0145\7h\2\2\u0145X\3")
        buf.write("\2\2\2\u0146\u0147\7g\2\2\u0147\u0148\7n\2\2\u0148\u0149")
        buf.write("\7u\2\2\u0149\u014a\7g\2\2\u014aZ\3\2\2\2\u014b\u014c")
        buf.write("\7g\2\2\u014c\u014d\7n\2\2\u014d\u014e\7k\2\2\u014e\u014f")
        buf.write("\7h\2\2\u014f\\\3\2\2\2\u0150\u0151\7h\2\2\u0151\u0152")
        buf.write("\7q\2\2\u0152\u0153\7t\2\2\u0153^\3\2\2\2\u0154\u0155")
        buf.write("\7y\2\2\u0155\u0156\7j\2\2\u0156\u0157\7k\2\2\u0157\u0158")
        buf.write("\7n\2\2\u0158\u0159\7g\2\2\u0159`\3\2\2\2\u015a\u015b")
        buf.write("\7t\2\2\u015b\u015c\7g\2\2\u015c\u015d\7v\2\2\u015db\3")
        buf.write("\2\2\2\u015e\u015f\7d\2\2\u015f\u0160\7t\2\2\u0160\u0161")
        buf.write("\7g\2\2\u0161\u0162\7c\2\2\u0162\u0163\7m\2\2\u0163d\3")
        buf.write("\2\2\2\u0164\u0165\7e\2\2\u0165\u0166\7q\2\2\u0166\u0167")
        buf.write("\7p\2\2\u0167\u0168\7v\2\2\u0168f\3\2\2\2\u0169\u016a")
        buf.write("\7y\2\2\u016a\u016b\7j\2\2\u016b\u016c\7g\2\2\u016c\u016d")
        buf.write("\7p\2\2\u016dh\3\2\2\2\u016e\u016f\7g\2\2\u016f\u0170")
        buf.write("\7h\2\2\u0170\u0171\7h\2\2\u0171j\3\2\2\2\u0172\u0173")
        buf.write("\7g\2\2\u0173\u0174\7z\2\2\u0174\u0175\7g\2\2\u0175\u0176")
        buf.write("\7e\2\2\u0176l\3\2\2\2\u0177\u0178\7k\2\2\u0178\u0179")
        buf.write("\7p\2\2\u0179\u017a\7k\2\2\u017a\u017b\7v\2\2\u017bn\3")
        buf.write("\2\2\2\u017c\u017d\7n\2\2\u017d\u017e\7k\2\2\u017e\u017f")
        buf.write("\7u\2\2\u017f\u0180\7v\2\2\u0180p\3\2\2\2\u0181\u0182")
        buf.write("\7d\2\2\u0182\u0183\7q\2\2\u0183\u0184\7q\2\2\u0184\u0185")
        buf.write("\7n\2\2\u0185r\3\2\2\2\u0186\u0187\7u\2\2\u0187\u0188")
        buf.write("\7v\2\2\u0188\u0189\7t\2\2\u0189t\3\2\2\2\u018a\u018b")
        buf.write("\7h\2\2\u018b\u018c\7n\2\2\u018c\u018d\7q\2\2\u018d\u018e")
        buf.write("\7c\2\2\u018e\u018f\7v\2\2\u018fv\3\2\2\2\u0190\u0191")
        buf.write("\7k\2\2\u0191\u0192\7p\2\2\u0192\u0193\7v\2\2\u0193x\3")
        buf.write("\2\2\2\u0194\u0195\7f\2\2\u0195\u0196\7q\2\2\u0196\u0197")
        buf.write("\7o\2\2\u0197z\3\2\2\2\u0198\u0199\7p\2\2\u0199\u019a")
        buf.write("\7w\2\2\u019a\u019b\7o\2\2\u019b|\3\2\2\2\u019c\u01a2")
        buf.write("\5\177@\2\u019d\u01a1\5\177@\2\u019e\u01a1\7a\2\2\u019f")
        buf.write("\u01a1\5\u0081A\2\u01a0\u019d\3\2\2\2\u01a0\u019e\3\2")
        buf.write("\2\2\u01a0\u019f\3\2\2\2\u01a1\u01a4\3\2\2\2\u01a2\u01a0")
        buf.write("\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a3~\3\2\2\2\u01a4\u01a2")
        buf.write("\3\2\2\2\u01a5\u01a6\t\7\2\2\u01a6\u0080\3\2\2\2\u01a7")
        buf.write("\u01a8\t\b\2\2\u01a8\u0082\3\2\2\2\u01a9\u01ad\7%\2\2")
        buf.write("\u01aa\u01ac\n\t\2\2\u01ab\u01aa\3\2\2\2\u01ac\u01af\3")
        buf.write("\2\2\2\u01ad\u01ab\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01b0")
        buf.write("\3\2\2\2\u01af\u01ad\3\2\2\2\u01b0\u01b1\bB\2\2\u01b1")
        buf.write("\u0084\3\2\2\2\u01b2\u01b4\t\n\2\2\u01b3\u01b2\3\2\2\2")
        buf.write("\u01b4\u01b5\3\2\2\2\u01b5\u01b3\3\2\2\2\u01b5\u01b6\3")
        buf.write("\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b8\bC\2\2\u01b8\u0086")
        buf.write("\3\2\2\2\27\2\u00d6\u00d8\u00df\u00e1\u00e5\u00ed\u00f2")
        buf.write("\u00f8\u00fb\u0101\u0104\u0109\u010d\u0118\u011c\u0121")
        buf.write("\u01a0\u01a2\u01ad\u01b5\3\b\2\2")
        return buf.getvalue()


class EvansLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    STRING_LITERAL = 31
    DECIMAL_LITERAL = 32
    FLOAT_LITERAL = 33
    BOOL_LITERAL = 34
    CLASS = 35
    ATTR = 36
    STATE = 37
    FUNC = 38
    PRED = 39
    OPER = 40
    IF = 41
    ELSE = 42
    ELIF = 43
    FOR = 44
    WHILE = 45
    RET = 46
    BREAK = 47
    CONT = 48
    WHEN = 49
    EFF = 50
    EXEC = 51
    INIT = 52
    LIST = 53
    BOOL = 54
    STR = 55
    FLOAT = 56
    INT = 57
    DOM = 58
    NUM = 59
    ID = 60
    COMMENT = 61
    WS = 62

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "':'", "','", "';'", "'='", "'('", "')'", "'.'", 
            "'+='", "'-='", "'*='", "'/='", "'%='", "'++'", "'--'", "'not'", 
            "'+'", "'-'", "'*'", "'/'", "'%'", "'<'", "'>'", "'<='", "'>='", 
            "'!='", "'=='", "'and'", "'or'", "'class'", "'attr'", "'state'", 
            "'func'", "'pred'", "'oper'", "'if'", "'else'", "'elif'", "'for'", 
            "'while'", "'ret'", "'break'", "'cont'", "'when'", "'eff'", 
            "'exec'", "'init'", "'list'", "'bool'", "'str'", "'float'", 
            "'int'", "'dom'", "'num'" ]

    symbolicNames = [ "<INVALID>",
            "STRING_LITERAL", "DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", 
            "CLASS", "ATTR", "STATE", "FUNC", "PRED", "OPER", "IF", "ELSE", 
            "ELIF", "FOR", "WHILE", "RET", "BREAK", "CONT", "WHEN", "EFF", 
            "EXEC", "INIT", "LIST", "BOOL", "STR", "FLOAT", "INT", "DOM", 
            "NUM", "ID", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "STRING_LITERAL", 
                  "STRING_ESCAPE", "DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", 
                  "EXPONENT", "CLASS", "ATTR", "STATE", "FUNC", "PRED", 
                  "OPER", "IF", "ELSE", "ELIF", "FOR", "WHILE", "RET", "BREAK", 
                  "CONT", "WHEN", "EFF", "EXEC", "INIT", "LIST", "BOOL", 
                  "STR", "FLOAT", "INT", "DOM", "NUM", "ID", "LETTER", "DIGIT", 
                  "COMMENT", "WS" ]

    grammarFileName = "Evans.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


