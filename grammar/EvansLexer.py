# Generated from grammar/Evans.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2?")
        buf.write("\u01b3\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\3\2\3")
        buf.write("\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t")
        buf.write("\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3")
        buf.write("\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21")
        buf.write("\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25")
        buf.write("\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \7 \u00d5\n \f \16 ")
        buf.write("\u00d8\13 \3 \3 \3 \3 \7 \u00de\n \f \16 \u00e1\13 \3")
        buf.write(" \5 \u00e4\n \3!\3!\3!\3\"\6\"\u00ea\n\"\r\"\16\"\u00eb")
        buf.write("\3#\6#\u00ef\n#\r#\16#\u00f0\3#\3#\6#\u00f5\n#\r#\16#")
        buf.write("\u00f6\3#\5#\u00fa\n#\3#\3#\6#\u00fe\n#\r#\16#\u00ff\3")
        buf.write("#\5#\u0103\n#\3#\6#\u0106\n#\r#\16#\u0107\3#\3#\5#\u010c")
        buf.write("\n#\3$\3$\3$\3$\3$\3$\3$\3$\3$\5$\u0117\n$\3%\3%\5%\u011b")
        buf.write("\n%\3%\6%\u011e\n%\r%\16%\u011f\3&\3&\3&\3&\3&\3&\3\'")
        buf.write("\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3")
        buf.write("*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3-\3-\3-\3-\3-\3.\3")
        buf.write(".\3.\3.\3.\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3")
        buf.write("\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63")
        buf.write("\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\65\3\65")
        buf.write("\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67")
        buf.write("\3\67\38\38\38\38\38\39\39\39\39\39\3:\3:\3:\3:\3;\3;")
        buf.write("\3;\3;\3;\3;\3<\3<\3<\3<\3=\3=\3=\3=\3>\3>\3>\3>\7>\u019b")
        buf.write("\n>\f>\16>\u019e\13>\3?\3?\3@\3@\3A\3A\7A\u01a6\nA\fA")
        buf.write("\16A\u01a9\13A\3A\3A\3B\6B\u01ae\nB\rB\16B\u01af\3B\3")
        buf.write("B\2\2C\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\2C\"E#G$I\2")
        buf.write("K%M&O\'Q(S)U*W+Y,[-]._/a\60c\61e\62g\63i\64k\65m\66o\67")
        buf.write("q8s9u:w;y<{=}\2\177\2\u0081>\u0083?\3\2\13\4\2$$^^\4\2")
        buf.write("))^^\n\2$$))^^ddhhppttvv\4\2GGgg\4\2--//\4\2C\\c|\3\2")
        buf.write("\62;\4\2\f\f\16\17\5\2\13\f\17\17\"\"\2\u01c4\2\3\3\2")
        buf.write("\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2")
        buf.write("\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2")
        buf.write("\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35")
        buf.write("\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2")
        buf.write("\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2")
        buf.write("\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2")
        buf.write("\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2C\3\2\2")
        buf.write("\2\2E\3\2\2\2\2G\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c")
        buf.write("\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2")
        buf.write("m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2")
        buf.write("\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2\u0081\3\2\2\2\2\u0083")
        buf.write("\3\2\2\2\3\u0085\3\2\2\2\5\u0087\3\2\2\2\7\u0089\3\2\2")
        buf.write("\2\t\u008b\3\2\2\2\13\u008d\3\2\2\2\r\u008f\3\2\2\2\17")
        buf.write("\u0091\3\2\2\2\21\u0093\3\2\2\2\23\u0095\3\2\2\2\25\u0097")
        buf.write("\3\2\2\2\27\u009a\3\2\2\2\31\u009d\3\2\2\2\33\u00a0\3")
        buf.write("\2\2\2\35\u00a3\3\2\2\2\37\u00a6\3\2\2\2!\u00a9\3\2\2")
        buf.write("\2#\u00ac\3\2\2\2%\u00b0\3\2\2\2\'\u00b2\3\2\2\2)\u00b4")
        buf.write("\3\2\2\2+\u00b6\3\2\2\2-\u00b8\3\2\2\2/\u00ba\3\2\2\2")
        buf.write("\61\u00bc\3\2\2\2\63\u00be\3\2\2\2\65\u00c1\3\2\2\2\67")
        buf.write("\u00c4\3\2\2\29\u00c7\3\2\2\2;\u00ca\3\2\2\2=\u00ce\3")
        buf.write("\2\2\2?\u00e3\3\2\2\2A\u00e5\3\2\2\2C\u00e9\3\2\2\2E\u010b")
        buf.write("\3\2\2\2G\u0116\3\2\2\2I\u0118\3\2\2\2K\u0121\3\2\2\2")
        buf.write("M\u0127\3\2\2\2O\u012c\3\2\2\2Q\u0132\3\2\2\2S\u0137\3")
        buf.write("\2\2\2U\u013c\3\2\2\2W\u0141\3\2\2\2Y\u0144\3\2\2\2[\u0149")
        buf.write("\3\2\2\2]\u014e\3\2\2\2_\u0152\3\2\2\2a\u0158\3\2\2\2")
        buf.write("c\u015c\3\2\2\2e\u0162\3\2\2\2g\u0167\3\2\2\2i\u016c\3")
        buf.write("\2\2\2k\u0170\3\2\2\2m\u0175\3\2\2\2o\u017a\3\2\2\2q\u017f")
        buf.write("\3\2\2\2s\u0184\3\2\2\2u\u0188\3\2\2\2w\u018e\3\2\2\2")
        buf.write("y\u0192\3\2\2\2{\u0196\3\2\2\2}\u019f\3\2\2\2\177\u01a1")
        buf.write("\3\2\2\2\u0081\u01a3\3\2\2\2\u0083\u01ad\3\2\2\2\u0085")
        buf.write("\u0086\7}\2\2\u0086\4\3\2\2\2\u0087\u0088\7\177\2\2\u0088")
        buf.write("\6\3\2\2\2\u0089\u008a\7<\2\2\u008a\b\3\2\2\2\u008b\u008c")
        buf.write("\7.\2\2\u008c\n\3\2\2\2\u008d\u008e\7=\2\2\u008e\f\3\2")
        buf.write("\2\2\u008f\u0090\7?\2\2\u0090\16\3\2\2\2\u0091\u0092\7")
        buf.write("*\2\2\u0092\20\3\2\2\2\u0093\u0094\7+\2\2\u0094\22\3\2")
        buf.write("\2\2\u0095\u0096\7\60\2\2\u0096\24\3\2\2\2\u0097\u0098")
        buf.write("\7-\2\2\u0098\u0099\7?\2\2\u0099\26\3\2\2\2\u009a\u009b")
        buf.write("\7/\2\2\u009b\u009c\7?\2\2\u009c\30\3\2\2\2\u009d\u009e")
        buf.write("\7,\2\2\u009e\u009f\7?\2\2\u009f\32\3\2\2\2\u00a0\u00a1")
        buf.write("\7\61\2\2\u00a1\u00a2\7?\2\2\u00a2\34\3\2\2\2\u00a3\u00a4")
        buf.write("\7\'\2\2\u00a4\u00a5\7?\2\2\u00a5\36\3\2\2\2\u00a6\u00a7")
        buf.write("\7-\2\2\u00a7\u00a8\7-\2\2\u00a8 \3\2\2\2\u00a9\u00aa")
        buf.write("\7/\2\2\u00aa\u00ab\7/\2\2\u00ab\"\3\2\2\2\u00ac\u00ad")
        buf.write("\7p\2\2\u00ad\u00ae\7q\2\2\u00ae\u00af\7v\2\2\u00af$\3")
        buf.write("\2\2\2\u00b0\u00b1\7-\2\2\u00b1&\3\2\2\2\u00b2\u00b3\7")
        buf.write("/\2\2\u00b3(\3\2\2\2\u00b4\u00b5\7,\2\2\u00b5*\3\2\2\2")
        buf.write("\u00b6\u00b7\7\61\2\2\u00b7,\3\2\2\2\u00b8\u00b9\7\'\2")
        buf.write("\2\u00b9.\3\2\2\2\u00ba\u00bb\7>\2\2\u00bb\60\3\2\2\2")
        buf.write("\u00bc\u00bd\7@\2\2\u00bd\62\3\2\2\2\u00be\u00bf\7>\2")
        buf.write("\2\u00bf\u00c0\7?\2\2\u00c0\64\3\2\2\2\u00c1\u00c2\7@")
        buf.write("\2\2\u00c2\u00c3\7?\2\2\u00c3\66\3\2\2\2\u00c4\u00c5\7")
        buf.write("#\2\2\u00c5\u00c6\7?\2\2\u00c68\3\2\2\2\u00c7\u00c8\7")
        buf.write("?\2\2\u00c8\u00c9\7?\2\2\u00c9:\3\2\2\2\u00ca\u00cb\7")
        buf.write("c\2\2\u00cb\u00cc\7p\2\2\u00cc\u00cd\7f\2\2\u00cd<\3\2")
        buf.write("\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0\7t\2\2\u00d0>\3\2")
        buf.write("\2\2\u00d1\u00d6\7$\2\2\u00d2\u00d5\5A!\2\u00d3\u00d5")
        buf.write("\n\2\2\2\u00d4\u00d2\3\2\2\2\u00d4\u00d3\3\2\2\2\u00d5")
        buf.write("\u00d8\3\2\2\2\u00d6\u00d4\3\2\2\2\u00d6\u00d7\3\2\2\2")
        buf.write("\u00d7\u00d9\3\2\2\2\u00d8\u00d6\3\2\2\2\u00d9\u00e4\7")
        buf.write("$\2\2\u00da\u00df\7)\2\2\u00db\u00de\5A!\2\u00dc\u00de")
        buf.write("\n\3\2\2\u00dd\u00db\3\2\2\2\u00dd\u00dc\3\2\2\2\u00de")
        buf.write("\u00e1\3\2\2\2\u00df\u00dd\3\2\2\2\u00df\u00e0\3\2\2\2")
        buf.write("\u00e0\u00e2\3\2\2\2\u00e1\u00df\3\2\2\2\u00e2\u00e4\7")
        buf.write(")\2\2\u00e3\u00d1\3\2\2\2\u00e3\u00da\3\2\2\2\u00e4@\3")
        buf.write("\2\2\2\u00e5\u00e6\7^\2\2\u00e6\u00e7\t\4\2\2\u00e7B\3")
        buf.write("\2\2\2\u00e8\u00ea\5\177@\2\u00e9\u00e8\3\2\2\2\u00ea")
        buf.write("\u00eb\3\2\2\2\u00eb\u00e9\3\2\2\2\u00eb\u00ec\3\2\2\2")
        buf.write("\u00ecD\3\2\2\2\u00ed\u00ef\5\177@\2\u00ee\u00ed\3\2\2")
        buf.write("\2\u00ef\u00f0\3\2\2\2\u00f0\u00ee\3\2\2\2\u00f0\u00f1")
        buf.write("\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2\u00f4\7\60\2\2\u00f3")
        buf.write("\u00f5\5\177@\2\u00f4\u00f3\3\2\2\2\u00f5\u00f6\3\2\2")
        buf.write("\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7\u00f9")
        buf.write("\3\2\2\2\u00f8\u00fa\5I%\2\u00f9\u00f8\3\2\2\2\u00f9\u00fa")
        buf.write("\3\2\2\2\u00fa\u010c\3\2\2\2\u00fb\u00fd\7\60\2\2\u00fc")
        buf.write("\u00fe\5\177@\2\u00fd\u00fc\3\2\2\2\u00fe\u00ff\3\2\2")
        buf.write("\2\u00ff\u00fd\3\2\2\2\u00ff\u0100\3\2\2\2\u0100\u0102")
        buf.write("\3\2\2\2\u0101\u0103\5I%\2\u0102\u0101\3\2\2\2\u0102\u0103")
        buf.write("\3\2\2\2\u0103\u010c\3\2\2\2\u0104\u0106\5\177@\2\u0105")
        buf.write("\u0104\3\2\2\2\u0106\u0107\3\2\2\2\u0107\u0105\3\2\2\2")
        buf.write("\u0107\u0108\3\2\2\2\u0108\u0109\3\2\2\2\u0109\u010a\5")
        buf.write("I%\2\u010a\u010c\3\2\2\2\u010b\u00ee\3\2\2\2\u010b\u00fb")
        buf.write("\3\2\2\2\u010b\u0105\3\2\2\2\u010cF\3\2\2\2\u010d\u010e")
        buf.write("\7v\2\2\u010e\u010f\7t\2\2\u010f\u0110\7w\2\2\u0110\u0117")
        buf.write("\7g\2\2\u0111\u0112\7h\2\2\u0112\u0113\7c\2\2\u0113\u0114")
        buf.write("\7n\2\2\u0114\u0115\7u\2\2\u0115\u0117\7g\2\2\u0116\u010d")
        buf.write("\3\2\2\2\u0116\u0111\3\2\2\2\u0117H\3\2\2\2\u0118\u011a")
        buf.write("\t\5\2\2\u0119\u011b\t\6\2\2\u011a\u0119\3\2\2\2\u011a")
        buf.write("\u011b\3\2\2\2\u011b\u011d\3\2\2\2\u011c\u011e\5\177@")
        buf.write("\2\u011d\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u011d")
        buf.write("\3\2\2\2\u011f\u0120\3\2\2\2\u0120J\3\2\2\2\u0121\u0122")
        buf.write("\7e\2\2\u0122\u0123\7n\2\2\u0123\u0124\7c\2\2\u0124\u0125")
        buf.write("\7u\2\2\u0125\u0126\7u\2\2\u0126L\3\2\2\2\u0127\u0128")
        buf.write("\7c\2\2\u0128\u0129\7v\2\2\u0129\u012a\7v\2\2\u012a\u012b")
        buf.write("\7t\2\2\u012bN\3\2\2\2\u012c\u012d\7u\2\2\u012d\u012e")
        buf.write("\7v\2\2\u012e\u012f\7c\2\2\u012f\u0130\7v\2\2\u0130\u0131")
        buf.write("\7g\2\2\u0131P\3\2\2\2\u0132\u0133\7h\2\2\u0133\u0134")
        buf.write("\7w\2\2\u0134\u0135\7p\2\2\u0135\u0136\7e\2\2\u0136R\3")
        buf.write("\2\2\2\u0137\u0138\7r\2\2\u0138\u0139\7t\2\2\u0139\u013a")
        buf.write("\7g\2\2\u013a\u013b\7f\2\2\u013bT\3\2\2\2\u013c\u013d")
        buf.write("\7q\2\2\u013d\u013e\7r\2\2\u013e\u013f\7g\2\2\u013f\u0140")
        buf.write("\7t\2\2\u0140V\3\2\2\2\u0141\u0142\7k\2\2\u0142\u0143")
        buf.write("\7h\2\2\u0143X\3\2\2\2\u0144\u0145\7g\2\2\u0145\u0146")
        buf.write("\7n\2\2\u0146\u0147\7u\2\2\u0147\u0148\7g\2\2\u0148Z\3")
        buf.write("\2\2\2\u0149\u014a\7g\2\2\u014a\u014b\7n\2\2\u014b\u014c")
        buf.write("\7k\2\2\u014c\u014d\7h\2\2\u014d\\\3\2\2\2\u014e\u014f")
        buf.write("\7h\2\2\u014f\u0150\7q\2\2\u0150\u0151\7t\2\2\u0151^\3")
        buf.write("\2\2\2\u0152\u0153\7y\2\2\u0153\u0154\7j\2\2\u0154\u0155")
        buf.write("\7k\2\2\u0155\u0156\7n\2\2\u0156\u0157\7g\2\2\u0157`\3")
        buf.write("\2\2\2\u0158\u0159\7t\2\2\u0159\u015a\7g\2\2\u015a\u015b")
        buf.write("\7v\2\2\u015bb\3\2\2\2\u015c\u015d\7d\2\2\u015d\u015e")
        buf.write("\7t\2\2\u015e\u015f\7g\2\2\u015f\u0160\7c\2\2\u0160\u0161")
        buf.write("\7m\2\2\u0161d\3\2\2\2\u0162\u0163\7e\2\2\u0163\u0164")
        buf.write("\7q\2\2\u0164\u0165\7p\2\2\u0165\u0166\7v\2\2\u0166f\3")
        buf.write("\2\2\2\u0167\u0168\7y\2\2\u0168\u0169\7j\2\2\u0169\u016a")
        buf.write("\7g\2\2\u016a\u016b\7p\2\2\u016bh\3\2\2\2\u016c\u016d")
        buf.write("\7g\2\2\u016d\u016e\7h\2\2\u016e\u016f\7h\2\2\u016fj\3")
        buf.write("\2\2\2\u0170\u0171\7g\2\2\u0171\u0172\7z\2\2\u0172\u0173")
        buf.write("\7g\2\2\u0173\u0174\7e\2\2\u0174l\3\2\2\2\u0175\u0176")
        buf.write("\7k\2\2\u0176\u0177\7p\2\2\u0177\u0178\7k\2\2\u0178\u0179")
        buf.write("\7v\2\2\u0179n\3\2\2\2\u017a\u017b\7n\2\2\u017b\u017c")
        buf.write("\7k\2\2\u017c\u017d\7u\2\2\u017d\u017e\7v\2\2\u017ep\3")
        buf.write("\2\2\2\u017f\u0180\7d\2\2\u0180\u0181\7q\2\2\u0181\u0182")
        buf.write("\7q\2\2\u0182\u0183\7n\2\2\u0183r\3\2\2\2\u0184\u0185")
        buf.write("\7u\2\2\u0185\u0186\7v\2\2\u0186\u0187\7t\2\2\u0187t\3")
        buf.write("\2\2\2\u0188\u0189\7h\2\2\u0189\u018a\7n\2\2\u018a\u018b")
        buf.write("\7q\2\2\u018b\u018c\7c\2\2\u018c\u018d\7v\2\2\u018dv\3")
        buf.write("\2\2\2\u018e\u018f\7k\2\2\u018f\u0190\7p\2\2\u0190\u0191")
        buf.write("\7v\2\2\u0191x\3\2\2\2\u0192\u0193\7f\2\2\u0193\u0194")
        buf.write("\7q\2\2\u0194\u0195\7o\2\2\u0195z\3\2\2\2\u0196\u019c")
        buf.write("\5}?\2\u0197\u019b\5}?\2\u0198\u019b\7a\2\2\u0199\u019b")
        buf.write("\5\177@\2\u019a\u0197\3\2\2\2\u019a\u0198\3\2\2\2\u019a")
        buf.write("\u0199\3\2\2\2\u019b\u019e\3\2\2\2\u019c\u019a\3\2\2\2")
        buf.write("\u019c\u019d\3\2\2\2\u019d|\3\2\2\2\u019e\u019c\3\2\2")
        buf.write("\2\u019f\u01a0\t\7\2\2\u01a0~\3\2\2\2\u01a1\u01a2\t\b")
        buf.write("\2\2\u01a2\u0080\3\2\2\2\u01a3\u01a7\7%\2\2\u01a4\u01a6")
        buf.write("\n\t\2\2\u01a5\u01a4\3\2\2\2\u01a6\u01a9\3\2\2\2\u01a7")
        buf.write("\u01a5\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01aa\3\2\2\2")
        buf.write("\u01a9\u01a7\3\2\2\2\u01aa\u01ab\bA\2\2\u01ab\u0082\3")
        buf.write("\2\2\2\u01ac\u01ae\t\n\2\2\u01ad\u01ac\3\2\2\2\u01ae\u01af")
        buf.write("\3\2\2\2\u01af\u01ad\3\2\2\2\u01af\u01b0\3\2\2\2\u01b0")
        buf.write("\u01b1\3\2\2\2\u01b1\u01b2\bB\2\2\u01b2\u0084\3\2\2\2")
        buf.write("\27\2\u00d4\u00d6\u00dd\u00df\u00e3\u00eb\u00f0\u00f6")
        buf.write("\u00f9\u00ff\u0102\u0107\u010b\u0116\u011a\u011f\u019a")
        buf.write("\u019c\u01a7\u01af\3\b\2\2")
        return buf.getvalue()


class EvansLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    STRING_LITERAL = 31
    DECIMAL_LITERAL = 32
    FLOAT_LITERAL = 33
    BOOL_LITERAL = 34
    CLASS = 35
    ATTR = 36
    STATE = 37
    FUNC = 38
    PRED = 39
    OPER = 40
    IF = 41
    ELSE = 42
    ELIF = 43
    FOR = 44
    WHILE = 45
    RET = 46
    BREAK = 47
    CONT = 48
    WHEN = 49
    EFF = 50
    EXEC = 51
    INIT = 52
    LIST = 53
    BOOL = 54
    STR = 55
    FLOAT = 56
    INT = 57
    DOM = 58
    ID = 59
    COMMENT = 60
    WS = 61

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "':'", "','", "';'", "'='", "'('", "')'", "'.'", 
            "'+='", "'-='", "'*='", "'/='", "'%='", "'++'", "'--'", "'not'", 
            "'+'", "'-'", "'*'", "'/'", "'%'", "'<'", "'>'", "'<='", "'>='", 
            "'!='", "'=='", "'and'", "'or'", "'class'", "'attr'", "'state'", 
            "'func'", "'pred'", "'oper'", "'if'", "'else'", "'elif'", "'for'", 
            "'while'", "'ret'", "'break'", "'cont'", "'when'", "'eff'", 
            "'exec'", "'init'", "'list'", "'bool'", "'str'", "'float'", 
            "'int'", "'dom'" ]

    symbolicNames = [ "<INVALID>",
            "STRING_LITERAL", "DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", 
            "CLASS", "ATTR", "STATE", "FUNC", "PRED", "OPER", "IF", "ELSE", 
            "ELIF", "FOR", "WHILE", "RET", "BREAK", "CONT", "WHEN", "EFF", 
            "EXEC", "INIT", "LIST", "BOOL", "STR", "FLOAT", "INT", "DOM", 
            "ID", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "STRING_LITERAL", 
                  "STRING_ESCAPE", "DECIMAL_LITERAL", "FLOAT_LITERAL", "BOOL_LITERAL", 
                  "EXPONENT", "CLASS", "ATTR", "STATE", "FUNC", "PRED", 
                  "OPER", "IF", "ELSE", "ELIF", "FOR", "WHILE", "RET", "BREAK", 
                  "CONT", "WHEN", "EFF", "EXEC", "INIT", "LIST", "BOOL", 
                  "STR", "FLOAT", "INT", "DOM", "ID", "LETTER", "DIGIT", 
                  "COMMENT", "WS" ]

    grammarFileName = "Evans.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


